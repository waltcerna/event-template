/* BASIC GRID
-----------------------------------------------------------------*/
.row {
	@include display(flex);
	@include flex(0, 1, auto);
	@include flex-direction(row);
	@include flex-wrap(wrap);
	@include justify-content(center);

	width: 100%;
	margin-left: auto;
	margin-right: auto;

	// expanded rows
	&.expand,
	&.expand-sm {
		max-width: none;
	}

	// horizontal column alignment
	&.h-left,
	&.h-left-sm {
		@include justify-content(flex-start);
	}

	&.h-center,
	&.h-center-sm {
		@include justify-content(center);
	}

	&.h-right,
	&.h-right-sm {
		@include justify-content(flex-end);
	}

	&.between,
	&.between-sm {
		@include justify-content(space-between);
	}

	&.around,
	&.around-sm {
		@include justify-content(space-around);
	}

	// vertical column alignment
	&.v-top,
	&.v-top-sm {
		@include align-items(flex-start);
	}

	&.v-middle,
	&.v-middle-sm {
		@include align-items(center);
	}

	&.v-bottom,
	&.v-bottom-sm {
		@include align-items(flex-end);
	}

	&.v-stretch,
	&.v-stretch-sm {
		@include align-items(stretch);
	}

	// auto-width columns
	&.shrink,
	&.shrink-sm {
		> * {
			@include flex(0, 0, auto);
			width: auto;
		}
	}

	&.release,
	&.release-sm {
		> * {
			@include flex(1, 1, 0px);
		}
	}

	> .col {
		width: 100%;
		@include flex(0, 0, auto);
		padding: $base-gutter-sm;

		// ordering
		&.first,
		&.first-sm {
			@include order(-1);
		}

		&.last,
		&.last-sm {
			@include order(1);
		}

		// auto-width columns
		&.shrink,
		&.shrink-sm {
			@include flex(0, 0, auto);
			width: auto;
		}

		&.release,
		&.release-sm {
			@include flex(1, 1, 0px);
		}
	}

	// gutter controls
	padding-left: $base-gutter-sm;
	padding-right: $base-gutter-sm;

	&.collapse {
		padding-left: 0;
		padding-right: 0;

		> .col {
			padding: 0;
		}

		&-x > .col {
			padding-left: 0;
			padding-right: 0;
		}

		&-y > .col {
			padding-top: 0;
			padding-bottom: 0;
		}
	}

	&.compact {
		padding-left: $base-gutter-sm + ($base-gutter-sm / 2);
		padding-right: $base-gutter-sm + ($base-gutter-sm / 2);

		> .col {
			padding: $base-gutter-sm / 2;
		}

		&-x > .col {
			padding-left: $base-gutter-sm / 2;
			padding-right: $base-gutter-sm / 2;
		}

		&-y {
			padding-left: $base-gutter-sm;
			padding-right: $base-gutter-sm;

			> .col {
				padding-top: $base-gutter-sm / 2;
				padding-bottom: $base-gutter-sm / 2;
			}
		}
	}

	&.loose {
		padding-left: 0;
		padding-right: 0;

		> .col {
			padding: $base-gutter-sm * 2;
		}

		&-x > .col {
			padding-left: $base-gutter-sm * 2;
			padding-right: $base-gutter-sm * 2;
		}

		&-y {
			padding-left: $base-gutter-sm;
			padding-right: $base-gutter-sm;

			> .col {
				padding-top: $base-gutter-sm * 2;
				padding-bottom: $base-gutter-sm * 2;
			}
		}
	}

	@include medium($md-breakpoint) {
		max-width: $md-breakpoint;

		// expanded rows
		&.expand-md {
			max-width: none;
		}

		// horizontal column alignment
		&.h-left-md {
			@include justify-content(flex-start);
		}

		&.h-center-md {
			@include justify-content(center);
		}

		&.h-right-md {
			@include justify-content(flex-end);
		}

		&.between-md {
			@include justify-content(space-between);
		}

		&.around-md {
			@include justify-content(space-around);
		}

		// vertical column alignment
		&.v-top-md {
			@include align-items(flex-start);
		}

		&.v-middle-md {
			@include align-items(center);
		}

		&.v-bottom-md {
			@include align-items(flex-end);
		}

		&.v-stretch-md {
			@include align-items(stretch);
		}

		// auto-width columns
		&.shrink-md {
			> * {
				@include flex(0, 0, auto);
				width: auto;
			}
		}

		&.release-md {
			> * {
				@include flex(1, 1, 0px);
			}
		}

		> .col {
			padding: $base-gutter-md;

			// ordering
			&.first-md {
				@include order(-1);
			}

			&.last-md {
				@include order(1);
			}

			// auto-width columns
			&.shrink-md {
				@include flex(0, 0, auto);
				width: auto;
			}

			&.release-md {
				@include flex(1, 1, 0px);
			}
		}

		// gutter controls
		padding-left: $base-gutter-md;
		padding-right: $base-gutter-md;

		&.compact {
			padding-left: $base-gutter-md + ($base-gutter-md / 2);
			padding-right: $base-gutter-md + ($base-gutter-md / 2);

			> .col {
				padding: $base-gutter-md / 2;
			}

			&-x > .col {
				padding-left: $base-gutter-md / 2;
				padding-right: $base-gutter-md / 2;
			}

			&-y {
				padding-left: $base-gutter-md;
				padding-right: $base-gutter-md;

				> .col {
					padding-top: $base-gutter-md / 2;
					padding-bottom: $base-gutter-md / 2;
				}
			}
		}

		&.loose {
			> .col {
				padding: $base-gutter-md * 2;
			}

			&-x > .col {
				padding-left: $base-gutter-md * 2;
				padding-right: $base-gutter-md * 2;
			}

			&-y {
				padding-left: $base-gutter-md;
				padding-right: $base-gutter-md;

				> .col {
					padding-top: $base-gutter-md * 2;
					padding-bottom: $base-gutter-md * 2;
				}
			}
		}
	}

	@include xlarge($xl-breakpoint) {
		max-width: $xl-breakpoint;

		// expanded rows
		&.expand-lg {
			max-width: none;
		}

		// horizontal column alignment
		&.h-left-lg {
			@include justify-content(flex-start);
		}

		&.h-center-lg {
			@include justify-content(center);
		}

		&.h-right-lg {
			@include justify-content(flex-end);
		}

		&.between-lg {
			@include justify-content(space-between);
		}

		&.around-lg {
			@include justify-content(space-around);
		}

		// vertical column alignment
		&.v-top-lg {
			@include align-items(flex-start);
		}

		&.v-middle-lg {
			@include align-items(center);
		}

		&.v-bottom-lg {
			@include align-items(flex-end);
		}

		&.v-stretch-lg {
			@include align-items(stretch);
		}

		// auto-width columns
		&.shrink-lg {
			> * {
				@include flex(0, 0, auto);
				width: auto;
			}
		}

		&.release-lg {
			> * {
				@include flex(1, 1, 0px);
			}
		}

		> .col {
			padding: $base-gutter-xl;

			// ordering
			&.first-lg {
				@include order(-1);
			}

			&.last-lg {
				@include order(1);
			}

			// auto-width columns
			&.shrink-lg {
				@include flex(0, 0, auto);
				width: auto;
			}

			&.release-lg {
				@include flex(1, 1, 0px);
			}
		}
	}

	@include doubleXL($doubleXL-breakpoint) {
		max-width: $doubleXL-breakpoint;

		// expanded rows
		&.expand-xl {
			max-width: none;
		}

		// horizontal column alignment
		&.h-left-xl {
			@include justify-content(flex-start);
		}

		&.h-center-xl {
			@include justify-content(center);
		}

		&.h-right-xl {
			@include justify-content(flex-end);
		}

		&.between-xl {
			@include justify-content(space-between);
		}

		&.around-xl {
			@include justify-content(space-around);
		}

		// vertical column alignment
		&.v-top-xl {
			@include align-items(flex-start);
		}

		&.v-middle-xl {
			@include align-items(center);
		}

		&.v-bottom-xl {
			@include align-items(flex-end);
		}

		&.v-stretch-xl {
			@include align-items(stretch);
		}

		// auto-width columns
		&.shrink-xl {
			> * {
				@include flex(0, 0, auto);
				width: auto;
			}
		}

		&.release-xl {
			> * {
				@include flex(1, 1, 0px);
			}
		}

		> .col {
			// ordering
			&.first-xl {
				@include order(-1);
			}

			&.last-xl {
				@include order(1);
			}

			// auto-width columns
			&.shrink-xl {
				@include flex(0, 0, auto);
				width: auto;
			}

			&.release-xl {
				@include flex(1, 1, 0px);
			}
		}

		// gutter controls
		padding-left: $base-gutter-xl;
		padding-right: $base-gutter-xl;

		&.compact {
			padding-left: $base-gutter-xl + ($base-gutter-xl / 2);
			padding-right: $base-gutter-xl + ($base-gutter-xl / 2);

			> .col {
				padding: $base-gutter-xl / 2;
			}

			&-x > .col {
				padding-left: $base-gutter-xl / 2;
				padding-right: $base-gutter-xl / 2;
			}

			&-y {
				padding-left: $base-gutter-xl;
				padding-right: $base-gutter-xl;

				> .col {
					padding-top: $base-gutter-xl / 2;
					padding-bottom: $base-gutter-xl / 2;
				}
			}
		}

		&.loose {
			> .col {
				padding: $base-gutter-xl * 2;
			}

			&-x > .col {
				padding-left: $base-gutter-xl * 2;
				padding-right: $base-gutter-xl * 2;
			}

			&-y {
				padding-left: $base-gutter-xl;
				padding-right: $base-gutter-xl;

				> .col {
					padding-top: $base-gutter-xl * 2;
					padding-bottom: $base-gutter-xl * 2;
				}
			}
		}
	}
}

$base-12-col: 100% / 12;

.row .col {
	&.sm {
		&-1 {
			@include flex(0, 0, round($base-12-col));
		}

		&-2 {
			@include flex(0, 0, round($base-12-col * 2));
		}

		&-3 {
			@include flex(0, 0, round($base-12-col * 3));
		}

		&-4 {
			@include flex(0, 0, round($base-12-col * 4));
		}

		&-5 {
			@include flex(0, 0, round($base-12-col * 5));
		}

		&-6 {
			@include flex(0, 0, round($base-12-col * 6));
		}

		&-7 {
			@include flex(0, 0, round($base-12-col * 7));
		}

		&-8 {
			@include flex(0, 0, round($base-12-col * 8));
		}

		&-9 {
			@include flex(0, 0, round($base-12-col * 9));
		}

		&-10 {
			@include flex(0, 0, round($base-12-col * 10));
		}

		&-11 {
			@include flex(0, 0, round($base-12-col * 11));
		}

		&-12 {
			@include flex(0, 0, 100%);
		}

		&-offset-1 {
			margin-left: round($base-12-col);
		}

		&-offset-2 {
			margin-left: round($base-12-col * 2);
		}

		&-offset-3 {
			margin-left: round($base-12-col * 3);
		}

		&-offset-4 {
			margin-left: round($base-12-col * 4);
		}

		&-offset-5 {
			margin-left: round($base-12-col * 5);
		}

		&-offset-6 {
			margin-left: round($base-12-col * 6);
		}

		&-offset-7 {
			margin-left: round($base-12-col * 7);
		}

		&-offset-8 {
			margin-left: round($base-12-col * 8);
		}

		&-offset-9 {
			margin-left: round($base-12-col * 9);
		}

		&-offset-10 {
			margin-left: round($base-12-col * 10);
		}

		&-offset-11 {
			margin-left: round($base-12-col * 11);
		}
	}

	@include medium($md-breakpoint) {
		&.md {
			&-1 {
				@include flex(0, 0, round($base-12-col));
			}

			&-2 {
				@include flex(0, 0, round($base-12-col * 2));
			}

			&-3 {
				@include flex(0, 0, round($base-12-col * 3));
			}

			&-4 {
				@include flex(0, 0, round($base-12-col * 4));
			}

			&-5 {
				@include flex(0, 0, round($base-12-col * 5));
			}

			&-6 {
				@include flex(0, 0, round($base-12-col * 6));
			}

			&-7 {
				@include flex(0, 0, round($base-12-col * 7));
			}

			&-8 {
				@include flex(0, 0, round($base-12-col * 8));
			}

			&-9 {
				@include flex(0, 0, round($base-12-col * 9));
			}

			&-10 {
				@include flex(0, 0, round($base-12-col * 10));
			}

			&-11 {
				@include flex(0, 0, round($base-12-col * 11));
			}

			&-12 {
				@include flex(0, 0, 100%);
			}

			&-offset-1 {
				margin-left: round($base-12-col);
			}

			&-offset-2 {
				margin-left: round($base-12-col * 2);
			}

			&-offset-3 {
				margin-left: round($base-12-col * 3);
			}

			&-offset-4 {
				margin-left: round($base-12-col * 4);
			}

			&-offset-5 {
				margin-left: round($base-12-col * 5);
			}

			&-offset-6 {
				margin-left: round($base-12-col * 6);
			}

			&-offset-7 {
				margin-left: round($base-12-col * 7);
			}

			&-offset-8 {
				margin-left: round($base-12-col * 8);
			}

			&-offset-9 {
				margin-left: round($base-12-col * 9);
			}

			&-offset-10 {
				margin-left: round($base-12-col * 10);
			}

			&-offset-11 {
				margin-left: round($base-12-col * 11);
			}
		}
	}

	@include xlarge($xl-breakpoint) {
		&.lg {
			&-1 {
				@include flex(0, 0, round($base-12-col));
			}

			&-2 {
				@include flex(0, 0, round($base-12-col * 2));
			}

			&-3 {
				@include flex(0, 0, round($base-12-col * 3));
			}

			&-4 {
				@include flex(0, 0, round($base-12-col * 4));
			}

			&-5 {
				@include flex(0, 0, round($base-12-col * 5));
			}

			&-6 {
				@include flex(0, 0, round($base-12-col * 6));
			}

			&-7 {
				@include flex(0, 0, round($base-12-col * 7));
			}

			&-8 {
				@include flex(0, 0, round($base-12-col * 8));
			}

			&-9 {
				@include flex(0, 0, round($base-12-col * 9));
			}

			&-10 {
				@include flex(0, 0, round($base-12-col * 10));
			}

			&-11 {
				@include flex(0, 0, round($base-12-col * 11));
			}

			&-12 {
				@include flex(0, 0, 100%);
			}

			&-offset-1 {
				margin-left: round($base-12-col);
			}

			&-offset-2 {
				margin-left: round($base-12-col * 2);
			}

			&-offset-3 {
				margin-left: round($base-12-col * 3);
			}

			&-offset-4 {
				margin-left: round($base-12-col * 4);
			}

			&-offset-5 {
				margin-left: round($base-12-col * 5);
			}

			&-offset-6 {
				margin-left: round($base-12-col * 6);
			}

			&-offset-7 {
				margin-left: round($base-12-col * 7);
			}

			&-offset-8 {
				margin-left: round($base-12-col * 8);
			}

			&-offset-9 {
				margin-left: round($base-12-col * 9);
			}

			&-offset-10 {
				margin-left: round($base-12-col * 10);
			}

			&-offset-11 {
				margin-left: round($base-12-col * 11);
			}
		}
	}

	@include doubleXL($doubleXL-breakpoint) {
		&.xl {
			&-1 {
				@include flex(0, 0, round($base-12-col));
			}

			&-2 {
				@include flex(0, 0, round($base-12-col * 2));
			}

			&-3 {
				@include flex(0, 0, round($base-12-col * 3));
			}

			&-4 {
				@include flex(0, 0, round($base-12-col * 4));
			}

			&-5 {
				@include flex(0, 0, round($base-12-col * 5));
			}

			&-6 {
				@include flex(0, 0, round($base-12-col * 6));
			}

			&-7 {
				@include flex(0, 0, round($base-12-col * 7));
			}

			&-8 {
				@include flex(0, 0, round($base-12-col * 8));
			}

			&-9 {
				@include flex(0, 0, round($base-12-col * 9));
			}

			&-10 {
				@include flex(0, 0, round($base-12-col * 10));
			}

			&-11 {
				@include flex(0, 0, round($base-12-col * 11));
			}

			&-12 {
				@include flex(0, 0, 100%);
			}

			&-offset-1 {
				margin-left: round($base-12-col);
			}

			&-offset-2 {
				margin-left: round($base-12-col * 2);
			}

			&-offset-3 {
				margin-left: round($base-12-col * 3);
			}

			&-offset-4 {
				margin-left: round($base-12-col * 4);
			}

			&-offset-5 {
				margin-left: round($base-12-col * 5);
			}

			&-offset-6 {
				margin-left: round($base-12-col * 6);
			}

			&-offset-7 {
				margin-left: round($base-12-col * 7);
			}

			&-offset-8 {
				margin-left: round($base-12-col * 8);
			}

			&-offset-9 {
				margin-left: round($base-12-col * 9);
			}

			&-offset-10 {
				margin-left: round($base-12-col * 10);
			}

			&-offset-11 {
				margin-left: round($base-12-col * 11);
			}
		}
	}
}
